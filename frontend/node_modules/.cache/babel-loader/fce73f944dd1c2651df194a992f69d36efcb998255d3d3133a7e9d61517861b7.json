{"ast":null,"code":"var _jsxFileName = \"D:\\\\xray-diagnosis-system\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/UploadForm.js\n\nimport React, { useState } from 'react';\nimport Spinner from './Spinner'; // Import the spinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm({\n  onAnalyze,\n  isLoading\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    onAnalyze(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 hover:bg-gray-50 transition-colors\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          name: \"file-upload\",\n          type: \"file\",\n          className: \"sr-only\",\n          onChange: handleFileChange,\n          accept: \"image/png, image/jpeg, image/dicom, .dcm\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-600 font-medium\",\n          children: [\"File selected: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Click to select a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-400 mt-1\",\n          children: \"PNG, JPG, or DICOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !selectedFile || isLoading,\n      className: \"mt-4 w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this), isLoading ? 'Analyzing...' : 'Analyze Image']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","Spinner","jsxDEV","_jsxDEV","UploadForm","onAnalyze","isLoading","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","children","className","htmlFor","id","name","type","onChange","accept","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/xray-diagnosis-system/frontend/src/components/UploadForm.js"],"sourcesContent":["// /frontend/src/components/UploadForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport Spinner from './Spinner'; // Import the spinner\r\n\r\nfunction UploadForm({ onAnalyze, isLoading }) {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setSelectedFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!selectedFile) return;\r\n    onAnalyze(selectedFile);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 hover:bg-gray-50 transition-colors\">\r\n        <label htmlFor=\"file-upload\" className=\"w-full\">\r\n          <input \r\n            id=\"file-upload\" \r\n            name=\"file-upload\" \r\n            type=\"file\" \r\n            className=\"sr-only\"\r\n            onChange={handleFileChange}\r\n            accept=\"image/png, image/jpeg, image/dicom, .dcm\"\r\n            disabled={isLoading}\r\n          />\r\n          {selectedFile ? (\r\n            <p className=\"text-green-600 font-medium\">\r\n              File selected: {selectedFile.name}\r\n            </p>\r\n          ) : (\r\n            <p className=\"text-gray-500\">\r\n              Click to select a file\r\n            </p>\r\n          )}\r\n          <p className=\"text-xs text-gray-400 mt-1\">PNG, JPG, or DICOM</p>\r\n        </label>\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleUpload}\r\n        disabled={!selectedFile || isLoading}\r\n        className=\"mt-4 w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\r\n      >\r\n        {isLoading && <Spinner />}\r\n        {isLoading ? 'Analyzing...' : 'Analyze Image'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/CJ,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACN,YAAY,EAAE;IACnBH,SAAS,CAACG,YAAY,CAAC;EACzB,CAAC;EAED,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAKa,SAAS,EAAC,2IAA2I;MAAAD,QAAA,eACxJZ,OAAA;QAAOc,OAAO,EAAC,aAAa;QAACD,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBAC7CZ,OAAA;UACEe,EAAE,EAAC,aAAa;UAChBC,IAAI,EAAC,aAAa;UAClBC,IAAI,EAAC,MAAM;UACXJ,SAAS,EAAC,SAAS;UACnBK,QAAQ,EAAEX,gBAAiB;UAC3BY,MAAM,EAAC,0CAA0C;UACjDC,QAAQ,EAAEjB;QAAU;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,EACDnB,YAAY,gBACXL,OAAA;UAAGa,SAAS,EAAC,4BAA4B;UAAAD,QAAA,GAAC,iBACzB,EAACP,YAAY,CAACW,IAAI;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,gBAEJxB,OAAA;UAAGa,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAC;QAE7B;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ,eACDxB,OAAA;UAAGa,SAAS,EAAC,4BAA4B;UAAAD,QAAA,EAAC;QAAkB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENxB,OAAA;MACEyB,OAAO,EAAEd,YAAa;MACtBS,QAAQ,EAAE,CAACf,YAAY,IAAIF,SAAU;MACrCU,SAAS,EAAC,6LAA6L;MAAAD,QAAA,GAEtMT,SAAS,iBAAIH,OAAA,CAACF,OAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxBrB,SAAS,GAAG,cAAc,GAAG,eAAe;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CAlDQH,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAoDnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}