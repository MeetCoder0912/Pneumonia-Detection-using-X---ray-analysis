{"ast":null,"code":"var _jsxFileName = \"D:\\\\xray-diagnosis-system\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/ChatWindow.js\n\n// 1. We import 'useEffect' from React.\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  analysisContext\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hello! I am ready to answer questions about the uploaded X-ray.\",\n    sender: 'ai'\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n\n  // 2. We add the useEffect hook.\n  // This code will automatically run every time the 'analysisContext' prop changes.\n  useEffect(() => {\n    // This will print a message to the browser's developer console (F12 -> Console).\n    console.log(\"ChatWindow received new context:\", analysisContext);\n  }, [analysisContext]); // The hook depends on analysisContext\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      id: messages.length + 1,\n      text: inputValue,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setIsTyping(true);\n    setInputValue('');\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: inputValue,\n          context: analysisContext\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const aiMessage = {\n        id: messages.length + 2,\n        text: data.answer,\n        sender: 'ai'\n      };\n      setMessages(prevMessages => [...prevMessages, aiMessage]);\n    } catch (error) {\n      console.error(\"Failed to get chat response:\", error);\n      const errorMessage = {\n        id: messages.length + 2,\n        text: \"Sorry, I couldn't connect to the server. Please try again.\",\n        sender: 'ai'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full border border-gray-200 rounded-lg flex flex-col bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-yellow-100 text-xs text-yellow-800 border-b border-yellow-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Debug Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Context:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this), \" \", analysisContext || \"Empty\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow p-4 overflow-y-auto\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded-lg px-4 py-2 max-w-xs lg:max-w-md ${message.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-lg px-4 py-2 bg-gray-200 text-gray-500\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-200 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n        placeholder: \"Ask a question...\",\n        className: \"flex-grow px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        disabled: isTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"ml-3 bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 transition-colors disabled:bg-gray-300\",\n        disabled: isTyping,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"O/usJn4RUArfiJsCqr7KJIqflMM=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatWindow","analysisContext","_s","messages","setMessages","id","text","sender","inputValue","setInputValue","isTyping","setIsTyping","console","log","handleSendMessage","trim","userMessage","length","prevMessages","response","fetch","method","headers","body","JSON","stringify","question","context","ok","Error","status","data","json","aiMessage","answer","error","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","type","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/xray-diagnosis-system/frontend/src/components/ChatWindow.js"],"sourcesContent":["// /frontend/src/components/ChatWindow.js\r\n\r\n// 1. We import 'useEffect' from React.\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction ChatWindow({ analysisContext }) {\r\n  const [messages, setMessages] = useState([\r\n    { id: 1, text: \"Hello! I am ready to answer questions about the uploaded X-ray.\", sender: 'ai' }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  // 2. We add the useEffect hook.\r\n  // This code will automatically run every time the 'analysisContext' prop changes.\r\n  useEffect(() => {\r\n    // This will print a message to the browser's developer console (F12 -> Console).\r\n    console.log(\"ChatWindow received new context:\", analysisContext);\r\n  }, [analysisContext]); // The hook depends on analysisContext\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: messages.length + 1,\r\n      text: inputValue,\r\n      sender: 'user'\r\n    };\r\n\r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setIsTyping(true);\r\n    setInputValue('');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          question: inputValue,\r\n          context: analysisContext,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const aiMessage = {\r\n        id: messages.length + 2,\r\n        text: data.answer,\r\n        sender: 'ai'\r\n      };\r\n\r\n      setMessages(prevMessages => [...prevMessages, aiMessage]);\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to get chat response:\", error);\r\n      const errorMessage = {\r\n        id: messages.length + 2,\r\n        text: \"Sorry, I couldn't connect to the server. Please try again.\",\r\n        sender: 'ai'\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full border border-gray-200 rounded-lg flex flex-col bg-white\">\r\n      \r\n      <div className=\"p-2 bg-yellow-100 text-xs text-yellow-800 border-b border-yellow-200\">\r\n        <p className=\"font-bold\">Debug Info:</p>\r\n        <p><strong>Current Context:</strong> {analysisContext || \"Empty\"}</p>\r\n      </div>\r\n\r\n      <div className=\"flex-grow p-4 overflow-y-auto\">\r\n        {messages.map((message) => (\r\n          <div \r\n            key={message.id} \r\n            className={`mb-4 flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div \r\n              className={`rounded-lg px-4 py-2 max-w-xs lg:max-w-md ${\r\n                message.sender === 'user' \r\n                  ? 'bg-blue-500 text-white' \r\n                  : 'bg-gray-200 text-gray-800'\r\n              }`}\r\n            >\r\n              {message.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"mb-4 flex justify-start\">\r\n            <div className=\"rounded-lg px-4 py-2 bg-gray-200 text-gray-500\">\r\n              Typing...\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"p-4 border-t border-gray-200 flex items-center\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n          placeholder=\"Ask a question...\"\r\n          className=\"flex-grow px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          disabled={isTyping}\r\n        />\r\n        <button\r\n          onClick={handleSendMessage}\r\n          className=\"ml-3 bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 transition-colors disabled:bg-gray-300\"\r\n          disabled={isTyping}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}