{"ast":null,"code":"var _jsxFileName = \"D:\\\\xray-diagnosis-system\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/UploadForm.js\n\nimport React, { useState } from 'react';\n\n// 1. We update the component to accept 'onAnalyze' and 'isLoading' as props.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm({\n  onAnalyze,\n  isLoading\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  // This function is called when the user clicks the \"Analyze Image\" button.\n  const handleUpload = () => {\n    if (!selectedFile) {\n      console.log(\"No file selected!\");\n      return;\n    }\n    // 2. Instead of just logging to the console, we now call the onAnalyze function\n    //    that was passed down from App.js, sending the selected file up to the parent.\n    onAnalyze(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 hover:bg-gray-50 transition-colors\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          name: \"file-upload\",\n          type: \"file\",\n          className: \"sr-only\",\n          onChange: handleFileChange,\n          accept: \"image/png, image/jpeg, image/dicom\",\n          disabled: isLoading // Disable the input while loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-600 font-medium\",\n          children: [\"File selected: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Click to select a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-400 mt-1\",\n          children: \"PNG, JPG, or DICOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload\n      // 3. The button is now disabled if no file is selected OR if the analysis is in progress.\n      ,\n      disabled: !selectedFile || isLoading,\n      className: \"mt-4 w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\",\n      children: isLoading ? 'Analyzing...' : 'Analyze Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","onAnalyze","isLoading","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","console","log","children","className","htmlFor","id","name","type","onChange","accept","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/xray-diagnosis-system/frontend/src/components/UploadForm.js"],"sourcesContent":["// /frontend/src/components/UploadForm.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\n// 1. We update the component to accept 'onAnalyze' and 'isLoading' as props.\r\nfunction UploadForm({ onAnalyze, isLoading }) {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setSelectedFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // This function is called when the user clicks the \"Analyze Image\" button.\r\n  const handleUpload = () => {\r\n    if (!selectedFile) {\r\n      console.log(\"No file selected!\");\r\n      return;\r\n    }\r\n    // 2. Instead of just logging to the console, we now call the onAnalyze function\r\n    //    that was passed down from App.js, sending the selected file up to the parent.\r\n    onAnalyze(selectedFile);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 hover:bg-gray-50 transition-colors\">\r\n        <label htmlFor=\"file-upload\" className=\"w-full\">\r\n          <input \r\n            id=\"file-upload\" \r\n            name=\"file-upload\" \r\n            type=\"file\" \r\n            className=\"sr-only\"\r\n            onChange={handleFileChange}\r\n            accept=\"image/png, image/jpeg, image/dicom\"\r\n            disabled={isLoading} // Disable the input while loading\r\n          />\r\n          {selectedFile ? (\r\n            <p className=\"text-green-600 font-medium\">\r\n              File selected: {selectedFile.name}\r\n            </p>\r\n          ) : (\r\n            <p className=\"text-gray-500\">\r\n              Click to select a file\r\n            </p>\r\n          )}\r\n          <p className=\"text-xs text-gray-400 mt-1\">PNG, JPG, or DICOM</p>\r\n        </label>\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleUpload}\r\n        // 3. The button is now disabled if no file is selected OR if the analysis is in progress.\r\n        disabled={!selectedFile || isLoading}\r\n        className=\"mt-4 w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n      >\r\n        {/* 4. The button text changes to show a loading state. */}\r\n        {isLoading ? 'Analyzing...' : 'Analyze Image'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,UAAUA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/CJ,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACN,YAAY,EAAE;MACjBO,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;IACF;IACA;IACA;IACAX,SAAS,CAACG,YAAY,CAAC;EACzB,CAAC;EAED,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAKe,SAAS,EAAC,2IAA2I;MAAAD,QAAA,eACxJd,OAAA;QAAOgB,OAAO,EAAC,aAAa;QAACD,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBAC7Cd,OAAA;UACEiB,EAAE,EAAC,aAAa;UAChBC,IAAI,EAAC,aAAa;UAClBC,IAAI,EAAC,MAAM;UACXJ,SAAS,EAAC,SAAS;UACnBK,QAAQ,EAAEb,gBAAiB;UAC3Bc,MAAM,EAAC,oCAAoC;UAC3CC,QAAQ,EAAEnB,SAAU,CAAC;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,EACDrB,YAAY,gBACXL,OAAA;UAAGe,SAAS,EAAC,4BAA4B;UAAAD,QAAA,GAAC,iBACzB,EAACT,YAAY,CAACa,IAAI;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,gBAEJ1B,OAAA;UAAGe,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAC;QAE7B;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ,eACD1B,OAAA;UAAGe,SAAS,EAAC,4BAA4B;UAAAD,QAAA,EAAC;QAAkB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN1B,OAAA;MACE2B,OAAO,EAAEhB;MACT;MAAA;MACAW,QAAQ,EAAE,CAACjB,YAAY,IAAIF,SAAU;MACrCY,SAAS,EAAC,4JAA4J;MAAAD,QAAA,EAGrKX,SAAS,GAAG,cAAc,GAAG;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CAzDQH,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA2DnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}