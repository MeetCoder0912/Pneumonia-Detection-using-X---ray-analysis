{"ast":null,"code":"var _jsxFileName = \"D:\\\\xray-diagnosis-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// /frontend/src/App.js\n\nimport React, { useState } from 'react'; // 1. Import useState for state management\nimport UploadForm from './components/UploadForm';\nimport ChatWindow from './components/ChatWindow';\nimport ResultsDisplay from './components/ResultsDisplay'; // 2. Import the new ResultsDisplay component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 3. Set up state variables to hold the data that will be shared between components.\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // 4. This function will be passed to the UploadForm. It updates the state in this App component.\n  const handleAnalyze = file => {\n    setUploadedImage(file);\n    setIsLoading(true);\n    setAnalysisResult('Analyzing, please wait...'); // Show a loading message\n\n    // --- In a future step, this is where we will call our backend API ---\n    // For now, we'll simulate a 2-second analysis with some placeholder data.\n    setTimeout(() => {\n      const mockResult = `AI Analysis for: ${file.name}\\n\\n- Finding: Potential opacity in the right upper lobe.\\n- Confidence: 88%\\n- Note: This is a simulated result. Not for clinical use.`;\n      setAnalysisResult(mockResult);\n      setIsLoading(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 flex flex-col items-center p-4 sm:p-6 lg:p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl sm:text-4xl font-bold text-gray-800\",\n          children: \"AI X-Ray Diagnosis Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-md text-gray-600\",\n          children: \"Upload an X-ray image to get an AI-powered analysis and ask questions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold text-gray-700 mb-4\",\n              children: \"1. Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n              onAnalyze: handleAnalyze,\n              isLoading: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-8 flex-grow flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold text-gray-700 mb-4\",\n              children: \"2. View Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow\",\n              children: /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n                uploadedImage: uploadedImage,\n                analysisResult: analysisResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-700 mb-4\",\n            children: \"3. Ask Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow\",\n            children: /*#__PURE__*/_jsxDEV(ChatWindow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VT6yke74CY7zKkT6Gmeuto17VF0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UploadForm","ChatWindow","ResultsDisplay","jsxDEV","_jsxDEV","App","_s","uploadedImage","setUploadedImage","analysisResult","setAnalysisResult","isLoading","setIsLoading","handleAnalyze","file","setTimeout","mockResult","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAnalyze","_c","$RefreshReg$"],"sources":["D:/xray-diagnosis-system/frontend/src/App.js"],"sourcesContent":["// /frontend/src/App.js\r\n\r\nimport React, { useState } from 'react'; // 1. Import useState for state management\r\nimport UploadForm from './components/UploadForm';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport ResultsDisplay from './components/ResultsDisplay'; // 2. Import the new ResultsDisplay component\r\n\r\nfunction App() {\r\n  // 3. Set up state variables to hold the data that will be shared between components.\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const [analysisResult, setAnalysisResult] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // 4. This function will be passed to the UploadForm. It updates the state in this App component.\r\n  const handleAnalyze = (file) => {\r\n    setUploadedImage(file);\r\n    setIsLoading(true);\r\n    setAnalysisResult('Analyzing, please wait...'); // Show a loading message\r\n\r\n    // --- In a future step, this is where we will call our backend API ---\r\n    // For now, we'll simulate a 2-second analysis with some placeholder data.\r\n    setTimeout(() => {\r\n      const mockResult = `AI Analysis for: ${file.name}\\n\\n- Finding: Potential opacity in the right upper lobe.\\n- Confidence: 88%\\n- Note: This is a simulated result. Not for clinical use.`;\r\n      setAnalysisResult(mockResult);\r\n      setIsLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col items-center p-4 sm:p-6 lg:p-8\">\r\n      <div className=\"w-full max-w-6xl mx-auto\">\r\n        \r\n        <header className=\"text-center mb-10\">\r\n          <h1 className=\"text-3xl sm:text-4xl font-bold text-gray-800\">\r\n            AI X-Ray Diagnosis Assistant\r\n          </h1>\r\n          <p className=\"mt-2 text-md text-gray-600\">\r\n            Upload an X-ray image to get an AI-powered analysis and ask questions.\r\n          </p>\r\n        </header>\r\n\r\n        <main className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          \r\n          <div className=\"bg-white p-6 rounded-lg shadow-md flex flex-col\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">1. Upload Image</h2>\r\n              {/* 5. Pass the handleAnalyze function and isLoading state to UploadForm */}\r\n              <UploadForm onAnalyze={handleAnalyze} isLoading={isLoading} />\r\n            </div>\r\n            <div className=\"mt-8 flex-grow flex flex-col\">\r\n              <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">2. View Analysis</h2>\r\n              <div className=\"flex-grow\">\r\n                {/* 6. Replace the placeholder with our new ResultsDisplay component */}\r\n                {/* and pass the state variables down to it as props. */}\r\n                <ResultsDisplay \r\n                  uploadedImage={uploadedImage} \r\n                  analysisResult={analysisResult} \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md flex flex-col\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">3. Ask Questions</h2>\r\n            <div className=\"flex-grow\">\r\n              <ChatWindow />\r\n            </div>\r\n          </div>\r\n\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}