{"ast":null,"code":"var _jsxFileName = \"D:\\\\xray-diagnosis-system\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/UploadForm.js\n\nimport React, { useState } from 'react';\n\n// This is the UploadForm component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  // We use React's 'useState' hook to keep track of the selected file.\n  // 'selectedFile' will hold the file object, and 'setSelectedFile' is the function to update it.\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // This function is called when the user selects a file from the file dialog.\n  const handleFileChange = event => {\n    // event.target.files is an array of files selected by the user. We take the first one.\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  // This function is called when the user clicks the \"Analyze Image\" button.\n  const handleUpload = () => {\n    if (!selectedFile) {\n      // We'll add a more user-friendly message later instead of an alert.\n      console.log(\"No file selected!\");\n      return;\n    }\n    // In a future step, we will add the code here to send the file to our backend.\n    console.log(\"Uploading file:\", selectedFile.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 hover:bg-gray-50 transition-colors\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          name: \"file-upload\",\n          type: \"file\",\n          className: \"sr-only\" // sr-only hides the default ugly file input\n          ,\n          onChange: handleFileChange,\n          accept: \"image/png, image/jpeg, image/dicom\" // Specify acceptable file types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-600 font-medium\",\n          children: [\"File selected: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Click to select a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-400 mt-1\",\n          children: \"PNG, JPG, or DICOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !selectedFile // The button is disabled if 'selectedFile' is null\n      ,\n      className: \"mt-4 w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\",\n      children: \"Analyze Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","console","log","name","children","className","htmlFor","id","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/xray-diagnosis-system/frontend/src/components/UploadForm.js"],"sourcesContent":["// /frontend/src/components/UploadForm.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\n// This is the UploadForm component.\r\nfunction UploadForm() {\r\n  // We use React's 'useState' hook to keep track of the selected file.\r\n  // 'selectedFile' will hold the file object, and 'setSelectedFile' is the function to update it.\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  // This function is called when the user selects a file from the file dialog.\r\n  const handleFileChange = (event) => {\r\n    // event.target.files is an array of files selected by the user. We take the first one.\r\n    if (event.target.files && event.target.files[0]) {\r\n      setSelectedFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // This function is called when the user clicks the \"Analyze Image\" button.\r\n  const handleUpload = () => {\r\n    if (!selectedFile) {\r\n      // We'll add a more user-friendly message later instead of an alert.\r\n      console.log(\"No file selected!\");\r\n      return;\r\n    }\r\n    // In a future step, we will add the code here to send the file to our backend.\r\n    console.log(\"Uploading file:\", selectedFile.name);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* This is the file input area. It's styled to look like a dropzone. */}\r\n      <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 hover:bg-gray-50 transition-colors\">\r\n        {/* We use a hidden input element and trigger it with a click on the label. */}\r\n        <label htmlFor=\"file-upload\" className=\"w-full\">\r\n          <input \r\n            id=\"file-upload\" \r\n            name=\"file-upload\" \r\n            type=\"file\" \r\n            className=\"sr-only\" // sr-only hides the default ugly file input\r\n            onChange={handleFileChange}\r\n            accept=\"image/png, image/jpeg, image/dicom\" // Specify acceptable file types\r\n          />\r\n          {/* This text will change based on whether a file is selected or not. */}\r\n          {selectedFile ? (\r\n            <p className=\"text-green-600 font-medium\">\r\n              File selected: {selectedFile.name}\r\n            </p>\r\n          ) : (\r\n            <p className=\"text-gray-500\">\r\n              Click to select a file\r\n            </p>\r\n          )}\r\n          <p className=\"text-xs text-gray-400 mt-1\">PNG, JPG, or DICOM</p>\r\n        </label>\r\n      </div>\r\n\r\n      {/* This is the upload button. It's disabled if no file is selected. */}\r\n      <button\r\n        onClick={handleUpload}\r\n        disabled={!selectedFile} // The button is disabled if 'selectedFile' is null\r\n        className=\"mt-4 w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n      >\r\n        Analyze Image\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClC;IACA,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/CJ,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACN,YAAY,EAAE;MACjB;MACAO,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;IACF;IACA;IACAD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,YAAY,CAACS,IAAI,CAAC;EACnD,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBAEEb,OAAA;MAAKc,SAAS,EAAC,2IAA2I;MAAAD,QAAA,eAExJb,OAAA;QAAOe,OAAO,EAAC,aAAa;QAACD,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBAC7Cb,OAAA;UACEgB,EAAE,EAAC,aAAa;UAChBJ,IAAI,EAAC,aAAa;UAClBK,IAAI,EAAC,MAAM;UACXH,SAAS,EAAC,SAAS,CAAC;UAAA;UACpBI,QAAQ,EAAEb,gBAAiB;UAC3Bc,MAAM,EAAC,oCAAoC,CAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,EAEDpB,YAAY,gBACXH,OAAA;UAAGc,SAAS,EAAC,4BAA4B;UAAAD,QAAA,GAAC,iBACzB,EAACV,YAAY,CAACS,IAAI;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,gBAEJvB,OAAA;UAAGc,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAC;QAE7B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ,eACDvB,OAAA;UAAGc,SAAS,EAAC,4BAA4B;UAAAD,QAAA,EAAC;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNvB,OAAA;MACEwB,OAAO,EAAEf,YAAa;MACtBgB,QAAQ,EAAE,CAACtB,YAAa,CAAC;MAAA;MACzBW,SAAS,EAAC,4JAA4J;MAAAD,QAAA,EACvK;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CA9DQD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAgEnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}